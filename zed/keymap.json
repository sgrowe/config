// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      "shift shift": "file_finder::Toggle",
      "ctrl-alt-`": "workspace::ToggleZoom",
      "cmd-k cmd-alt-c": "workspace::CopyPath",
      "cmd-shift-g": "git_panel::ToggleFocus",
      // Custom
      "alt-g": ["task::Spawn", { "task_name": "Open SCSS file" }]
    }
  },
  {
    "context": "Workspace || Editor",
    "bindings": {
      "ctrl-r": "projects::OpenRecent",
      "alt-cmd-c": "workspace::CopyRelativePath"
    }
  },
  {
    // need the specificity to override built-in key bindings
    "context": "Workspace || ((Editor && !agent_diff) && !AgentPanel)",
    "bindings": {
      "cmd-y": ["task::Spawn", { "task_name": "Open local config" }]
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "alt-t": ["task::Spawn", { "task_name": "Spin up test file in zellij" }]
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-`": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "cmd-?": "workspace::ToggleRightDock"
    }
  },
  {
    // alt key to do subword motion
    "context": "VimControl && !menu && vim_mode != operator",
    "bindings": {
      "alt-w": "vim::NextSubwordStart",
      "alt-b": "vim::PreviousSubwordStart",
      "alt-e": "vim::NextSubwordEnd",
      "g alt-e": "vim::PreviousSubwordEnd"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-s": "vim::PushAddSurrounds"
    }
  }
  // MiniQuotes + MiniBrackets bindings
  // {
  //   "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
  //   "bindings": {
  //     "q": "vim::MiniQuotes"
  //     // "b": "vim::MiniBrackets"
  //   }
  // }
]
